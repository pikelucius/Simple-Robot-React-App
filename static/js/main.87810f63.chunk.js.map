{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","Cardlist","robots","map","robot","i","Searchbox","searchChange","type","placeholder","onChange","ErrorBoundary","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","searchfield","target","value","fetch","response","json","console","log","message","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAeeA,G,MAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACzB,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WAEpD,gCACI,6BAAKL,IACL,4BAAIC,YCLL,SAASK,EAAT,GAA+B,IAAXC,EAAU,EAAVA,OAC/B,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAOC,GAChB,OAAO,cAAC,EAAD,CAAcV,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,MAAOC,GAAIK,EAAOG,GAAGR,IAA/DQ,QCPrC,IAaeC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,OACLC,YAAY,gBACZC,SAAUH,OCaXI,E,kDAnBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHA,E,8DAOAC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKL,MAAMO,a,GAhBEC,aCQbC,EARA,SAACT,GACZ,OACI,qBAAKU,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKb,EAAMO,YCsDJO,E,kDAlDX,aAAe,IAAD,8BACV,gBAkBJC,eAAiB,SAACC,GACd,EAAKV,SAAS,CAAEW,YAAaD,EAAME,OAAOC,SAlB1C,EAAKlB,MAAQ,CACTX,OAAQ,GACR2B,YAAa,IAJP,E,2MAUiBG,MAAM,6C,cAAvBC,E,gBACaA,EAASC,O,OAAtBA,E,OACNjB,KAAKC,SAAS,CAAEhB,OAAQgC,I,kDAEzBC,QAAQC,IAAI,KAAIC,S,+IASb,IAAD,EAC2BpB,KAAKJ,MAA7BX,EADH,EACGA,OAAQ2B,EADX,EACWA,YACVS,EAAiBpC,EAAOqC,QAAO,SAAArC,GACjC,OAAOA,EAAOP,KAAK6C,cAAcC,SAASZ,EAAYW,kBAE1D,OAAQtC,EAAOwC,OAQX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,oBACA,cAAC,EAAD,CAAWS,aAAcU,KAAKU,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC1B,EAAD,CAAUC,OAAQoC,WAX9B,qBAAKxC,UAAU,KAAf,SACI,oBAAIA,UAAU,KAAd,8B,GAhCEsB,aCIHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.87810f63.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\"/>\r\n            \r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nexport default function Cardlist({ robots }) {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((robot, i) => {\r\n                   return <Card key={i} name={robots[i].name} email={robots[i].email} id={robots[i].id} />\r\n                } )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nconst Searchbox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type=\"text\" \r\n                placeholder='Search robots'\r\n                onChange={searchChange} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Ooops. This is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Cardlist from '../components/Cardlist';\r\nimport Searchbox from '../components/Searchbox';\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n       try {\r\n            const response = await fetch('http://jsonplaceholder.typicode.com/users');\r\n            const json = await response.json()\r\n            this.setState({ robots: json })\r\n       } catch (err) {\r\n           console.log(err.message);\r\n       }\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n        \r\n    }\r\n    render() {\r\n        const { robots, searchfield } = this.state\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        });\r\n        return !robots.length ? \r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f2'>LOADING...</h1>\r\n            </div>\r\n        ) : \r\n\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f2'>ROBOTS</h1>\r\n                <Searchbox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>   \r\n                        <Cardlist robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}